c
memory_link[:href]
c
memory_link[:href]
c
memory_link[:href]
c
memory_link[:href]
c
memories_links = memories_links_page.css('ul.products.grid > li > a:first-child').count
memories_links = memories_links_page.css('ul.products li:first-child a:first-child')[1]
memories_links = memories_links_page.css('ul.products li:first-child a:first-child')[0]
memories_links = memories_links_page.css('ul.products li:first-child a:first-child')
memories_links = memories_links_page.css('ul.products li:first-child a:first-child').count
memories_links = memories_links_page.css('ul.products li:first-child a:first-child')
memories_links = memories_links_page.css('ul.products li a:first-of-type')[3]
memories_links = memories_links_page.css('ul.products li a:first-of-type')[2]
memories_links = memories_links_page.css('ul.products li a:first-of-type')[1]
memories_links = memories_links_page.css('ul.products li a:first-of-type')[0]
memories_links = memories_links_page.css('ul.products li a:first-of-type')[1]
memories_links = memories_links_page.css('ul.products li a:first-of-type').first
memories_links = memories_links_page.css('ul.products li a:first-of-type').count
memories_links = memories_links_page.css('ul.products li a:first-of-type')
memories_links = memories_links_page.css('ul.products li a:first-child').count
memories_links = memories_links_page.css('ul.products li a:first-child')
memories_links = memories_links_page.css('ul.products li a').count
memories_links = memories_links_page.css('ul.products li a')
memories_links[1][:href]
memories_links.[1][:href]
memories_links.last[:href]
memories_links.first[:href]
memories_links.count
memories_links = memories_links_page.css('ul.products li:first-child a')
memories_links_page = Nokogiri::HTML(response.body)
response = conn.get(carriers_links.first[:href])
carriers_links.count
carriers_links = carriers_links_page.css('ul.level_2 li a')
carriers_links_page = Nokogiri::HTML(response.body)
response = conn.get(models_links.first[:href])
models_links.first[:href]
response = conn.get(link[:href]).status
models_links.first[:href]
models_links = mobile_models_page.css('div.transition-container li a')
models_links
models_links.first[:href]
models_links = mobile_models_page.css('div.transition-container li a').count
models_links = mobile_models_page.css('div.transition-container li a')
mobile_models_page = Nokogiri::HTML(response.body)
response.status
response
exit
c
link[:href]
 response = conn.get(link[:href])
puts response
c
mobile_brands.each do |link|
  puts link
end
mobile_brands.first[:href]
mobile_brands.first.href
mobile_brands.first.link
mobile_brands.first
mobile_brands.count
mobile_brands
c
mobile_brands = doc.css('div.transition-container li a').uniq.count
mobile_brands = doc.css('div.transition-container li a').count
mobile_brands = doc.css('div.transition-container li a').uniq
mobile_brands = doc.css('div.transition-container li a').unique
mobile_brands = doc.css('div.transition-container li a')
mobile_brands
c
mobile_brands = doc.css('div.transition-container li a').count
mobile_brands = doc.css('div.transition-container li a')
doc = Nokogiri::HTML(page)
page = URI.open("https://www.gazelle.com/sell/cell-phone").read
c
page = form.submit
form["wpforms[fields][2]"] = "hacked go to home now"
form["wpforms[fields][3]"] = " scraped your web"
form["wpforms[fields][1]"] = "umarfaroo@email.com"
form = page.form_with(id: "wpforms-form-10")
form = page.form_with("wpforms")
form = page.form("wpforms")
page = link.click
link = page.link_with(href: "https://elevatewears.com/contact/")
link = page.link_with(href: "/contact")
link = page.link_with(text: "contact")
link = page.link_with(id: "#menu-item-1947")
link = page.link_with(id: "menu-item-1947")
page
